
Timer_gp_output_ccr_systick.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000003fc  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000584  08000584  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000584  08000584  00002004  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000584  08000584  00002004  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000584  08000584  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000584  08000584  00001584  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000588  08000588  00001588  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000004  20000000  0800058c  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00002004  2**0
                  CONTENTS
 10 .bss          00000020  20000004  20000004  00002004  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000024  20000024  00002004  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00002004  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000105a  00000000  00000000  0000202e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000004c7  00000000  00000000  00003088  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000e8  00000000  00000000  00003550  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000098  00000000  00000000  00003638  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001809c  00000000  00000000  000036d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000013a2  00000000  00000000  0001b76c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008be45  00000000  00000000  0001cb0e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000a8953  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000020c  00000000  00000000  000a8998  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 00000025  00000000  00000000  000a8ba4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000053  00000000  00000000  000a8bc9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000004 	.word	0x20000004
 80001a4:	00000000 	.word	0x00000000
 80001a8:	0800056c 	.word	0x0800056c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000008 	.word	0x20000008
 80001c4:	0800056c 	.word	0x0800056c

080001c8 <LED_INIT>:
 */

#include "led.h"

void LED_INIT(uint8_t pin)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	4603      	mov	r3, r0
 80001d0:	71fb      	strb	r3, [r7, #7]
	RCC->AHB1ENR |= BV(GPIOD_CLK_EN);
 80001d2:	4b29      	ldr	r3, [pc, #164]	@ (8000278 <LED_INIT+0xb0>)
 80001d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001d6:	4a28      	ldr	r2, [pc, #160]	@ (8000278 <LED_INIT+0xb0>)
 80001d8:	f043 0308 	orr.w	r3, r3, #8
 80001dc:	6313      	str	r3, [r2, #48]	@ 0x30
	LED_GPIO->MODER &= ~(BV(pin*2+1));
 80001de:	4b27      	ldr	r3, [pc, #156]	@ (800027c <LED_INIT+0xb4>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	79fa      	ldrb	r2, [r7, #7]
 80001e4:	0052      	lsls	r2, r2, #1
 80001e6:	3201      	adds	r2, #1
 80001e8:	2101      	movs	r1, #1
 80001ea:	fa01 f202 	lsl.w	r2, r1, r2
 80001ee:	43d2      	mvns	r2, r2
 80001f0:	4611      	mov	r1, r2
 80001f2:	4a22      	ldr	r2, [pc, #136]	@ (800027c <LED_INIT+0xb4>)
 80001f4:	400b      	ands	r3, r1
 80001f6:	6013      	str	r3, [r2, #0]
	LED_GPIO->MODER |= BV(2*pin);
 80001f8:	4b20      	ldr	r3, [pc, #128]	@ (800027c <LED_INIT+0xb4>)
 80001fa:	681b      	ldr	r3, [r3, #0]
 80001fc:	79fa      	ldrb	r2, [r7, #7]
 80001fe:	0052      	lsls	r2, r2, #1
 8000200:	2101      	movs	r1, #1
 8000202:	fa01 f202 	lsl.w	r2, r1, r2
 8000206:	4611      	mov	r1, r2
 8000208:	4a1c      	ldr	r2, [pc, #112]	@ (800027c <LED_INIT+0xb4>)
 800020a:	430b      	orrs	r3, r1
 800020c:	6013      	str	r3, [r2, #0]
	LED_GPIO->OTYPER &= ~BV(pin);
 800020e:	4b1b      	ldr	r3, [pc, #108]	@ (800027c <LED_INIT+0xb4>)
 8000210:	685b      	ldr	r3, [r3, #4]
 8000212:	79fa      	ldrb	r2, [r7, #7]
 8000214:	2101      	movs	r1, #1
 8000216:	fa01 f202 	lsl.w	r2, r1, r2
 800021a:	43d2      	mvns	r2, r2
 800021c:	4611      	mov	r1, r2
 800021e:	4a17      	ldr	r2, [pc, #92]	@ (800027c <LED_INIT+0xb4>)
 8000220:	400b      	ands	r3, r1
 8000222:	6053      	str	r3, [r2, #4]
	LED_GPIO->OSPEEDR &= ~(BV(2*pin)|BV(2*pin+1));
 8000224:	4b15      	ldr	r3, [pc, #84]	@ (800027c <LED_INIT+0xb4>)
 8000226:	689b      	ldr	r3, [r3, #8]
 8000228:	79fa      	ldrb	r2, [r7, #7]
 800022a:	0052      	lsls	r2, r2, #1
 800022c:	2101      	movs	r1, #1
 800022e:	4091      	lsls	r1, r2
 8000230:	79fa      	ldrb	r2, [r7, #7]
 8000232:	0052      	lsls	r2, r2, #1
 8000234:	3201      	adds	r2, #1
 8000236:	2001      	movs	r0, #1
 8000238:	fa00 f202 	lsl.w	r2, r0, r2
 800023c:	430a      	orrs	r2, r1
 800023e:	43d2      	mvns	r2, r2
 8000240:	4611      	mov	r1, r2
 8000242:	4a0e      	ldr	r2, [pc, #56]	@ (800027c <LED_INIT+0xb4>)
 8000244:	400b      	ands	r3, r1
 8000246:	6093      	str	r3, [r2, #8]
	LED_GPIO->PUPDR &= ~(BV(2*pin)|BV(2*pin+1));
 8000248:	4b0c      	ldr	r3, [pc, #48]	@ (800027c <LED_INIT+0xb4>)
 800024a:	68db      	ldr	r3, [r3, #12]
 800024c:	79fa      	ldrb	r2, [r7, #7]
 800024e:	0052      	lsls	r2, r2, #1
 8000250:	2101      	movs	r1, #1
 8000252:	4091      	lsls	r1, r2
 8000254:	79fa      	ldrb	r2, [r7, #7]
 8000256:	0052      	lsls	r2, r2, #1
 8000258:	3201      	adds	r2, #1
 800025a:	2001      	movs	r0, #1
 800025c:	fa00 f202 	lsl.w	r2, r0, r2
 8000260:	430a      	orrs	r2, r1
 8000262:	43d2      	mvns	r2, r2
 8000264:	4611      	mov	r1, r2
 8000266:	4a05      	ldr	r2, [pc, #20]	@ (800027c <LED_INIT+0xb4>)
 8000268:	400b      	ands	r3, r1
 800026a:	60d3      	str	r3, [r2, #12]
}
 800026c:	bf00      	nop
 800026e:	370c      	adds	r7, #12
 8000270:	46bd      	mov	sp, r7
 8000272:	bc80      	pop	{r7}
 8000274:	4770      	bx	lr
 8000276:	bf00      	nop
 8000278:	40023800 	.word	0x40023800
 800027c:	40020c00 	.word	0x40020c00

08000280 <LED_ON>:

void LED_ON(uint8_t pin)
{
 8000280:	b480      	push	{r7}
 8000282:	b083      	sub	sp, #12
 8000284:	af00      	add	r7, sp, #0
 8000286:	4603      	mov	r3, r0
 8000288:	71fb      	strb	r3, [r7, #7]
	LED_GPIO->ODR |= BV(pin);
 800028a:	4b07      	ldr	r3, [pc, #28]	@ (80002a8 <LED_ON+0x28>)
 800028c:	695b      	ldr	r3, [r3, #20]
 800028e:	79fa      	ldrb	r2, [r7, #7]
 8000290:	2101      	movs	r1, #1
 8000292:	fa01 f202 	lsl.w	r2, r1, r2
 8000296:	4611      	mov	r1, r2
 8000298:	4a03      	ldr	r2, [pc, #12]	@ (80002a8 <LED_ON+0x28>)
 800029a:	430b      	orrs	r3, r1
 800029c:	6153      	str	r3, [r2, #20]
}
 800029e:	bf00      	nop
 80002a0:	370c      	adds	r7, #12
 80002a2:	46bd      	mov	sp, r7
 80002a4:	bc80      	pop	{r7}
 80002a6:	4770      	bx	lr
 80002a8:	40020c00 	.word	0x40020c00

080002ac <LED_OFF>:

void LED_OFF(uint8_t pin)
{
 80002ac:	b480      	push	{r7}
 80002ae:	b083      	sub	sp, #12
 80002b0:	af00      	add	r7, sp, #0
 80002b2:	4603      	mov	r3, r0
 80002b4:	71fb      	strb	r3, [r7, #7]
	LED_GPIO->ODR &= ~BV(pin);
 80002b6:	4b08      	ldr	r3, [pc, #32]	@ (80002d8 <LED_OFF+0x2c>)
 80002b8:	695b      	ldr	r3, [r3, #20]
 80002ba:	79fa      	ldrb	r2, [r7, #7]
 80002bc:	2101      	movs	r1, #1
 80002be:	fa01 f202 	lsl.w	r2, r1, r2
 80002c2:	43d2      	mvns	r2, r2
 80002c4:	4611      	mov	r1, r2
 80002c6:	4a04      	ldr	r2, [pc, #16]	@ (80002d8 <LED_OFF+0x2c>)
 80002c8:	400b      	ands	r3, r1
 80002ca:	6153      	str	r3, [r2, #20]
}
 80002cc:	bf00      	nop
 80002ce:	370c      	adds	r7, #12
 80002d0:	46bd      	mov	sp, r7
 80002d2:	bc80      	pop	{r7}
 80002d4:	4770      	bx	lr
 80002d6:	bf00      	nop
 80002d8:	40020c00 	.word	0x40020c00

080002dc <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80002dc:	b480      	push	{r7}
 80002de:	b083      	sub	sp, #12
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	4603      	mov	r3, r0
 80002e4:	6039      	str	r1, [r7, #0]
 80002e6:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80002e8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80002ec:	2b00      	cmp	r3, #0
 80002ee:	db0a      	blt.n	8000306 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80002f0:	683b      	ldr	r3, [r7, #0]
 80002f2:	b2da      	uxtb	r2, r3
 80002f4:	490c      	ldr	r1, [pc, #48]	@ (8000328 <__NVIC_SetPriority+0x4c>)
 80002f6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80002fa:	0112      	lsls	r2, r2, #4
 80002fc:	b2d2      	uxtb	r2, r2
 80002fe:	440b      	add	r3, r1
 8000300:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000304:	e00a      	b.n	800031c <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000306:	683b      	ldr	r3, [r7, #0]
 8000308:	b2da      	uxtb	r2, r3
 800030a:	4908      	ldr	r1, [pc, #32]	@ (800032c <__NVIC_SetPriority+0x50>)
 800030c:	79fb      	ldrb	r3, [r7, #7]
 800030e:	f003 030f 	and.w	r3, r3, #15
 8000312:	3b04      	subs	r3, #4
 8000314:	0112      	lsls	r2, r2, #4
 8000316:	b2d2      	uxtb	r2, r2
 8000318:	440b      	add	r3, r1
 800031a:	761a      	strb	r2, [r3, #24]
}
 800031c:	bf00      	nop
 800031e:	370c      	adds	r7, #12
 8000320:	46bd      	mov	sp, r7
 8000322:	bc80      	pop	{r7}
 8000324:	4770      	bx	lr
 8000326:	bf00      	nop
 8000328:	e000e100 	.word	0xe000e100
 800032c:	e000ed00 	.word	0xe000ed00

08000330 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8000330:	b580      	push	{r7, lr}
 8000332:	b082      	sub	sp, #8
 8000334:	af00      	add	r7, sp, #0
 8000336:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	3b01      	subs	r3, #1
 800033c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8000340:	d301      	bcc.n	8000346 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8000342:	2301      	movs	r3, #1
 8000344:	e00f      	b.n	8000366 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8000346:	4a0a      	ldr	r2, [pc, #40]	@ (8000370 <SysTick_Config+0x40>)
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	3b01      	subs	r3, #1
 800034c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800034e:	210f      	movs	r1, #15
 8000350:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000354:	f7ff ffc2 	bl	80002dc <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000358:	4b05      	ldr	r3, [pc, #20]	@ (8000370 <SysTick_Config+0x40>)
 800035a:	2200      	movs	r2, #0
 800035c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800035e:	4b04      	ldr	r3, [pc, #16]	@ (8000370 <SysTick_Config+0x40>)
 8000360:	2207      	movs	r2, #7
 8000362:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8000364:	2300      	movs	r3, #0
}
 8000366:	4618      	mov	r0, r3
 8000368:	3708      	adds	r7, #8
 800036a:	46bd      	mov	sp, r7
 800036c:	bd80      	pop	{r7, pc}
 800036e:	bf00      	nop
 8000370:	e000e010 	.word	0xe000e010

08000374 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000374:	b580      	push	{r7, lr}
 8000376:	b082      	sub	sp, #8
 8000378:	af00      	add	r7, sp, #0
	for(int i=12;i<=15;i++)
 800037a:	230c      	movs	r3, #12
 800037c:	607b      	str	r3, [r7, #4]
 800037e:	e007      	b.n	8000390 <main+0x1c>
	{
		LED_INIT(i);
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	b2db      	uxtb	r3, r3
 8000384:	4618      	mov	r0, r3
 8000386:	f7ff ff1f 	bl	80001c8 <LED_INIT>
	for(int i=12;i<=15;i++)
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	3301      	adds	r3, #1
 800038e:	607b      	str	r3, [r7, #4]
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	2b0f      	cmp	r3, #15
 8000394:	ddf4      	ble.n	8000380 <main+0xc>
	}

	SysTick_Config(SystemCoreClock/1000);
 8000396:	4b1d      	ldr	r3, [pc, #116]	@ (800040c <main+0x98>)
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	4a1d      	ldr	r2, [pc, #116]	@ (8000410 <main+0x9c>)
 800039c:	fba2 2303 	umull	r2, r3, r2, r3
 80003a0:	099b      	lsrs	r3, r3, #6
 80003a2:	4618      	mov	r0, r3
 80003a4:	f7ff ffc4 	bl	8000330 <SysTick_Config>
	while(1)
	{
	LED_ON(12);
 80003a8:	200c      	movs	r0, #12
 80003aa:	f7ff ff69 	bl	8000280 <LED_ON>
	SystickDelayms(100);
 80003ae:	2064      	movs	r0, #100	@ 0x64
 80003b0:	f000 f874 	bl	800049c <SystickDelayms>
	LED_ON(13);
 80003b4:	200d      	movs	r0, #13
 80003b6:	f7ff ff63 	bl	8000280 <LED_ON>
	SystickDelayms(100);
 80003ba:	2064      	movs	r0, #100	@ 0x64
 80003bc:	f000 f86e 	bl	800049c <SystickDelayms>
	LED_ON(14);
 80003c0:	200e      	movs	r0, #14
 80003c2:	f7ff ff5d 	bl	8000280 <LED_ON>
	SystickDelayms(100);
 80003c6:	2064      	movs	r0, #100	@ 0x64
 80003c8:	f000 f868 	bl	800049c <SystickDelayms>
	LED_ON(15);
 80003cc:	200f      	movs	r0, #15
 80003ce:	f7ff ff57 	bl	8000280 <LED_ON>
	SystickDelayms(100);
 80003d2:	2064      	movs	r0, #100	@ 0x64
 80003d4:	f000 f862 	bl	800049c <SystickDelayms>
	LED_OFF(12);
 80003d8:	200c      	movs	r0, #12
 80003da:	f7ff ff67 	bl	80002ac <LED_OFF>
	SystickDelayms(100);
 80003de:	2064      	movs	r0, #100	@ 0x64
 80003e0:	f000 f85c 	bl	800049c <SystickDelayms>
	LED_OFF(13);
 80003e4:	200d      	movs	r0, #13
 80003e6:	f7ff ff61 	bl	80002ac <LED_OFF>
	SystickDelayms(100);
 80003ea:	2064      	movs	r0, #100	@ 0x64
 80003ec:	f000 f856 	bl	800049c <SystickDelayms>
	LED_OFF(14);
 80003f0:	200e      	movs	r0, #14
 80003f2:	f7ff ff5b 	bl	80002ac <LED_OFF>
	SystickDelayms(100);
 80003f6:	2064      	movs	r0, #100	@ 0x64
 80003f8:	f000 f850 	bl	800049c <SystickDelayms>
	LED_OFF(15);
 80003fc:	200f      	movs	r0, #15
 80003fe:	f7ff ff55 	bl	80002ac <LED_OFF>
	SystickDelayms(100);
 8000402:	2064      	movs	r0, #100	@ 0x64
 8000404:	f000 f84a 	bl	800049c <SystickDelayms>
	LED_ON(12);
 8000408:	bf00      	nop
 800040a:	e7cd      	b.n	80003a8 <main+0x34>
 800040c:	20000000 	.word	0x20000000
 8000410:	10624dd3 	.word	0x10624dd3

08000414 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000414:	b580      	push	{r7, lr}
 8000416:	af00      	add	r7, sp, #0
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */

  DWT_Init();
 8000418:	f000 f802 	bl	8000420 <DWT_Init>
}
 800041c:	bf00      	nop
 800041e:	bd80      	pop	{r7, pc}

08000420 <DWT_Init>:
}
#pragma GCC pop_options


uint32_t DWT_Init(void)
{
 8000420:	b480      	push	{r7}
 8000422:	af00      	add	r7, sp, #0
    /* Disable TRC */
    CoreDebug->DEMCR &= ~CoreDebug_DEMCR_TRCENA_Msk; // ~0x01000000;
 8000424:	4b14      	ldr	r3, [pc, #80]	@ (8000478 <DWT_Init+0x58>)
 8000426:	68db      	ldr	r3, [r3, #12]
 8000428:	4a13      	ldr	r2, [pc, #76]	@ (8000478 <DWT_Init+0x58>)
 800042a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800042e:	60d3      	str	r3, [r2, #12]
    /* Enable TRC */
    CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk; // 0x01000000;
 8000430:	4b11      	ldr	r3, [pc, #68]	@ (8000478 <DWT_Init+0x58>)
 8000432:	68db      	ldr	r3, [r3, #12]
 8000434:	4a10      	ldr	r2, [pc, #64]	@ (8000478 <DWT_Init+0x58>)
 8000436:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800043a:	60d3      	str	r3, [r2, #12]
    /* Disable clock cycle counter */
    DWT->CTRL &= ~DWT_CTRL_CYCCNTENA_Msk; //~0x00000001;
 800043c:	4b0f      	ldr	r3, [pc, #60]	@ (800047c <DWT_Init+0x5c>)
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	4a0e      	ldr	r2, [pc, #56]	@ (800047c <DWT_Init+0x5c>)
 8000442:	f023 0301 	bic.w	r3, r3, #1
 8000446:	6013      	str	r3, [r2, #0]
    /* Enable  clock cycle counter */
    DWT->CTRL |=  DWT_CTRL_CYCCNTENA_Msk; //0x00000001;
 8000448:	4b0c      	ldr	r3, [pc, #48]	@ (800047c <DWT_Init+0x5c>)
 800044a:	681b      	ldr	r3, [r3, #0]
 800044c:	4a0b      	ldr	r2, [pc, #44]	@ (800047c <DWT_Init+0x5c>)
 800044e:	f043 0301 	orr.w	r3, r3, #1
 8000452:	6013      	str	r3, [r2, #0]
    /* Reset the clock cycle counter value */
    DWT->CYCCNT = 0;
 8000454:	4b09      	ldr	r3, [pc, #36]	@ (800047c <DWT_Init+0x5c>)
 8000456:	2200      	movs	r2, #0
 8000458:	605a      	str	r2, [r3, #4]
    /* 3 NO OPERATION instructions */
    __ASM volatile ("NOP");
 800045a:	bf00      	nop
    __ASM volatile ("NOP");
 800045c:	bf00      	nop
    __ASM volatile ("NOP");
 800045e:	bf00      	nop
    /* Check if clock cycle counter has started: 0 on success */
    return !(DWT->CYCCNT);
 8000460:	4b06      	ldr	r3, [pc, #24]	@ (800047c <DWT_Init+0x5c>)
 8000462:	685b      	ldr	r3, [r3, #4]
 8000464:	2b00      	cmp	r3, #0
 8000466:	bf0c      	ite	eq
 8000468:	2301      	moveq	r3, #1
 800046a:	2300      	movne	r3, #0
 800046c:	b2db      	uxtb	r3, r3
}
 800046e:	4618      	mov	r0, r3
 8000470:	46bd      	mov	sp, r7
 8000472:	bc80      	pop	{r7}
 8000474:	4770      	bx	lr
 8000476:	bf00      	nop
 8000478:	e000edf0 	.word	0xe000edf0
 800047c:	e0001000 	.word	0xe0001000

08000480 <SysTick_Handler>:
#include"systick.h"

volatile uint32_t xtick=0;

void SysTick_Handler(void)
{
 8000480:	b480      	push	{r7}
 8000482:	af00      	add	r7, sp, #0
	xtick++;
 8000484:	4b04      	ldr	r3, [pc, #16]	@ (8000498 <SysTick_Handler+0x18>)
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	3301      	adds	r3, #1
 800048a:	4a03      	ldr	r2, [pc, #12]	@ (8000498 <SysTick_Handler+0x18>)
 800048c:	6013      	str	r3, [r2, #0]
}
 800048e:	bf00      	nop
 8000490:	46bd      	mov	sp, r7
 8000492:	bc80      	pop	{r7}
 8000494:	4770      	bx	lr
 8000496:	bf00      	nop
 8000498:	20000020 	.word	0x20000020

0800049c <SystickDelayms>:

void SystickDelayms(uint32_t ms)
{
 800049c:	b480      	push	{r7}
 800049e:	b085      	sub	sp, #20
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	6078      	str	r0, [r7, #4]
	uint32_t counter=xtick;
 80004a4:	4b09      	ldr	r3, [pc, #36]	@ (80004cc <SystickDelayms+0x30>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	60fb      	str	r3, [r7, #12]
	uint32_t wait=counter+ms;
 80004aa:	68fa      	ldr	r2, [r7, #12]
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	4413      	add	r3, r2
 80004b0:	60bb      	str	r3, [r7, #8]
	while(xtick<wait);
 80004b2:	bf00      	nop
 80004b4:	4b05      	ldr	r3, [pc, #20]	@ (80004cc <SystickDelayms+0x30>)
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	68ba      	ldr	r2, [r7, #8]
 80004ba:	429a      	cmp	r2, r3
 80004bc:	d8fa      	bhi.n	80004b4 <SystickDelayms+0x18>
}
 80004be:	bf00      	nop
 80004c0:	bf00      	nop
 80004c2:	3714      	adds	r7, #20
 80004c4:	46bd      	mov	sp, r7
 80004c6:	bc80      	pop	{r7}
 80004c8:	4770      	bx	lr
 80004ca:	bf00      	nop
 80004cc:	20000020 	.word	0x20000020

080004d0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004d0:	480d      	ldr	r0, [pc, #52]	@ (8000508 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004d2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004d4:	f7ff ff9e 	bl	8000414 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004d8:	480c      	ldr	r0, [pc, #48]	@ (800050c <LoopForever+0x6>)
  ldr r1, =_edata
 80004da:	490d      	ldr	r1, [pc, #52]	@ (8000510 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004dc:	4a0d      	ldr	r2, [pc, #52]	@ (8000514 <LoopForever+0xe>)
  movs r3, #0
 80004de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004e0:	e002      	b.n	80004e8 <LoopCopyDataInit>

080004e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004e6:	3304      	adds	r3, #4

080004e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004ec:	d3f9      	bcc.n	80004e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004ee:	4a0a      	ldr	r2, [pc, #40]	@ (8000518 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004f0:	4c0a      	ldr	r4, [pc, #40]	@ (800051c <LoopForever+0x16>)
  movs r3, #0
 80004f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004f4:	e001      	b.n	80004fa <LoopFillZerobss>

080004f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004f8:	3204      	adds	r2, #4

080004fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004fc:	d3fb      	bcc.n	80004f6 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 80004fe:	f000 f811 	bl	8000524 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 8000502:	f7ff ff37 	bl	8000374 <main>

08000506 <LoopForever>:

LoopForever:
  b LoopForever
 8000506:	e7fe      	b.n	8000506 <LoopForever>
  ldr   r0, =_estack
 8000508:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800050c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000510:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000514:	0800058c 	.word	0x0800058c
  ldr r2, =_sbss
 8000518:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 800051c:	20000024 	.word	0x20000024

08000520 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000520:	e7fe      	b.n	8000520 <ADC_IRQHandler>
	...

08000524 <__libc_init_array>:
 8000524:	b570      	push	{r4, r5, r6, lr}
 8000526:	4d0d      	ldr	r5, [pc, #52]	@ (800055c <__libc_init_array+0x38>)
 8000528:	4c0d      	ldr	r4, [pc, #52]	@ (8000560 <__libc_init_array+0x3c>)
 800052a:	1b64      	subs	r4, r4, r5
 800052c:	10a4      	asrs	r4, r4, #2
 800052e:	2600      	movs	r6, #0
 8000530:	42a6      	cmp	r6, r4
 8000532:	d109      	bne.n	8000548 <__libc_init_array+0x24>
 8000534:	4d0b      	ldr	r5, [pc, #44]	@ (8000564 <__libc_init_array+0x40>)
 8000536:	4c0c      	ldr	r4, [pc, #48]	@ (8000568 <__libc_init_array+0x44>)
 8000538:	f000 f818 	bl	800056c <_init>
 800053c:	1b64      	subs	r4, r4, r5
 800053e:	10a4      	asrs	r4, r4, #2
 8000540:	2600      	movs	r6, #0
 8000542:	42a6      	cmp	r6, r4
 8000544:	d105      	bne.n	8000552 <__libc_init_array+0x2e>
 8000546:	bd70      	pop	{r4, r5, r6, pc}
 8000548:	f855 3b04 	ldr.w	r3, [r5], #4
 800054c:	4798      	blx	r3
 800054e:	3601      	adds	r6, #1
 8000550:	e7ee      	b.n	8000530 <__libc_init_array+0xc>
 8000552:	f855 3b04 	ldr.w	r3, [r5], #4
 8000556:	4798      	blx	r3
 8000558:	3601      	adds	r6, #1
 800055a:	e7f2      	b.n	8000542 <__libc_init_array+0x1e>
 800055c:	08000584 	.word	0x08000584
 8000560:	08000584 	.word	0x08000584
 8000564:	08000584 	.word	0x08000584
 8000568:	08000588 	.word	0x08000588

0800056c <_init>:
 800056c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800056e:	bf00      	nop
 8000570:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000572:	bc08      	pop	{r3}
 8000574:	469e      	mov	lr, r3
 8000576:	4770      	bx	lr

08000578 <_fini>:
 8000578:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800057a:	bf00      	nop
 800057c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800057e:	bc08      	pop	{r3}
 8000580:	469e      	mov	lr, r3
 8000582:	4770      	bx	lr
