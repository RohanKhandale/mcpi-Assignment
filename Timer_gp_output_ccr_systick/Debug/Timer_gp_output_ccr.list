
Timer_gp_output_ccr.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000023c  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003c4  080003cc  000013cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003c4  080003c4  000013cc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080003c4  080003c4  000013cc  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080003c4  080003cc  000013cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003c4  080003c4  000013c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080003c8  080003c8  000013c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000013cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000013cc  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000013cc  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009df  00000000  00000000  000013f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000297  00000000  00000000  00001dd5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a0  00000000  00000000  00002070  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000066  00000000  00000000  00002110  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00017fcb  00000000  00000000  00002176  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000ec7  00000000  00000000  0001a141  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008b87c  00000000  00000000  0001b008  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000a6884  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000010c  00000000  00000000  000a68c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 00000025  00000000  00000000  000a69d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000053  00000000  00000000  000a69f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080003ac 	.word	0x080003ac

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080003ac 	.word	0x080003ac

080001c8 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80001c8:	b580      	push	{r7, lr}
 80001ca:	af00      	add	r7, sp, #0
	TimerInit();
 80001cc:	f000 f83a 	bl	8000244 <TimerInit>
	return 0;
 80001d0:	2300      	movs	r3, #0
}
 80001d2:	4618      	mov	r0, r3
 80001d4:	bd80      	pop	{r7, pc}
	...

080001d8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80001d8:	b580      	push	{r7, lr}
 80001da:	af00      	add	r7, sp, #0
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */

  DWT_Init();
 80001dc:	f000 f802 	bl	80001e4 <DWT_Init>
}
 80001e0:	bf00      	nop
 80001e2:	bd80      	pop	{r7, pc}

080001e4 <DWT_Init>:
}
#pragma GCC pop_options


uint32_t DWT_Init(void)
{
 80001e4:	b480      	push	{r7}
 80001e6:	af00      	add	r7, sp, #0
    /* Disable TRC */
    CoreDebug->DEMCR &= ~CoreDebug_DEMCR_TRCENA_Msk; // ~0x01000000;
 80001e8:	4b14      	ldr	r3, [pc, #80]	@ (800023c <DWT_Init+0x58>)
 80001ea:	68db      	ldr	r3, [r3, #12]
 80001ec:	4a13      	ldr	r2, [pc, #76]	@ (800023c <DWT_Init+0x58>)
 80001ee:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80001f2:	60d3      	str	r3, [r2, #12]
    /* Enable TRC */
    CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk; // 0x01000000;
 80001f4:	4b11      	ldr	r3, [pc, #68]	@ (800023c <DWT_Init+0x58>)
 80001f6:	68db      	ldr	r3, [r3, #12]
 80001f8:	4a10      	ldr	r2, [pc, #64]	@ (800023c <DWT_Init+0x58>)
 80001fa:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80001fe:	60d3      	str	r3, [r2, #12]
    /* Disable clock cycle counter */
    DWT->CTRL &= ~DWT_CTRL_CYCCNTENA_Msk; //~0x00000001;
 8000200:	4b0f      	ldr	r3, [pc, #60]	@ (8000240 <DWT_Init+0x5c>)
 8000202:	681b      	ldr	r3, [r3, #0]
 8000204:	4a0e      	ldr	r2, [pc, #56]	@ (8000240 <DWT_Init+0x5c>)
 8000206:	f023 0301 	bic.w	r3, r3, #1
 800020a:	6013      	str	r3, [r2, #0]
    /* Enable  clock cycle counter */
    DWT->CTRL |=  DWT_CTRL_CYCCNTENA_Msk; //0x00000001;
 800020c:	4b0c      	ldr	r3, [pc, #48]	@ (8000240 <DWT_Init+0x5c>)
 800020e:	681b      	ldr	r3, [r3, #0]
 8000210:	4a0b      	ldr	r2, [pc, #44]	@ (8000240 <DWT_Init+0x5c>)
 8000212:	f043 0301 	orr.w	r3, r3, #1
 8000216:	6013      	str	r3, [r2, #0]
    /* Reset the clock cycle counter value */
    DWT->CYCCNT = 0;
 8000218:	4b09      	ldr	r3, [pc, #36]	@ (8000240 <DWT_Init+0x5c>)
 800021a:	2200      	movs	r2, #0
 800021c:	605a      	str	r2, [r3, #4]
    /* 3 NO OPERATION instructions */
    __ASM volatile ("NOP");
 800021e:	bf00      	nop
    __ASM volatile ("NOP");
 8000220:	bf00      	nop
    __ASM volatile ("NOP");
 8000222:	bf00      	nop
    /* Check if clock cycle counter has started: 0 on success */
    return !(DWT->CYCCNT);
 8000224:	4b06      	ldr	r3, [pc, #24]	@ (8000240 <DWT_Init+0x5c>)
 8000226:	685b      	ldr	r3, [r3, #4]
 8000228:	2b00      	cmp	r3, #0
 800022a:	bf0c      	ite	eq
 800022c:	2301      	moveq	r3, #1
 800022e:	2300      	movne	r3, #0
 8000230:	b2db      	uxtb	r3, r3
}
 8000232:	4618      	mov	r0, r3
 8000234:	46bd      	mov	sp, r7
 8000236:	bc80      	pop	{r7}
 8000238:	4770      	bx	lr
 800023a:	bf00      	nop
 800023c:	e000edf0 	.word	0xe000edf0
 8000240:	e0001000 	.word	0xe0001000

08000244 <TimerInit>:
 */

#include "Timer.h"

void TimerInit(void)
{
 8000244:	b480      	push	{r7}
 8000246:	af00      	add	r7, sp, #0
	//GPIOD
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 8000248:	4b2e      	ldr	r3, [pc, #184]	@ (8000304 <TimerInit+0xc0>)
 800024a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800024c:	4a2d      	ldr	r2, [pc, #180]	@ (8000304 <TimerInit+0xc0>)
 800024e:	f043 0308 	orr.w	r3, r3, #8
 8000252:	6313      	str	r3, [r2, #48]	@ 0x30

	GPIOD->MODER |= BV(25)|BV(27)|BV(29)|BV(31);
 8000254:	4b2c      	ldr	r3, [pc, #176]	@ (8000308 <TimerInit+0xc4>)
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	4a2b      	ldr	r2, [pc, #172]	@ (8000308 <TimerInit+0xc4>)
 800025a:	f043 432a 	orr.w	r3, r3, #2852126720	@ 0xaa000000
 800025e:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &= ~(BV(24)|BV(26)|BV(28)|BV(30));
 8000260:	4b29      	ldr	r3, [pc, #164]	@ (8000308 <TimerInit+0xc4>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	4a28      	ldr	r2, [pc, #160]	@ (8000308 <TimerInit+0xc4>)
 8000266:	f023 43aa 	bic.w	r3, r3, #1426063360	@ 0x55000000
 800026a:	6013      	str	r3, [r2, #0]

	GPIOD->PUPDR &= ~(BV(24)|BV(26)|BV(28)|BV(30)|BV(25)|BV(27)|BV(29)|BV(31));
 800026c:	4b26      	ldr	r3, [pc, #152]	@ (8000308 <TimerInit+0xc4>)
 800026e:	68db      	ldr	r3, [r3, #12]
 8000270:	4a25      	ldr	r2, [pc, #148]	@ (8000308 <TimerInit+0xc4>)
 8000272:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8000276:	60d3      	str	r3, [r2, #12]

	GPIOD->AFR[1] |= BV(17)|BV(21)|BV(25)|BV(29);
 8000278:	4b23      	ldr	r3, [pc, #140]	@ (8000308 <TimerInit+0xc4>)
 800027a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800027c:	4a22      	ldr	r2, [pc, #136]	@ (8000308 <TimerInit+0xc4>)
 800027e:	f043 5308 	orr.w	r3, r3, #570425344	@ 0x22000000
 8000282:	f443 1308 	orr.w	r3, r3, #2228224	@ 0x220000
 8000286:	6253      	str	r3, [r2, #36]	@ 0x24

	//clk
	RCC->APB1ENR |= RCC_APB1ENR_TIM4EN;
 8000288:	4b1e      	ldr	r3, [pc, #120]	@ (8000304 <TimerInit+0xc0>)
 800028a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800028c:	4a1d      	ldr	r2, [pc, #116]	@ (8000304 <TimerInit+0xc0>)
 800028e:	f043 0304 	orr.w	r3, r3, #4
 8000292:	6413      	str	r3, [r2, #64]	@ 0x40
	TIM4->PSC=PR-1;
 8000294:	4b1d      	ldr	r3, [pc, #116]	@ (800030c <TimerInit+0xc8>)
 8000296:	f643 627f 	movw	r2, #15999	@ 0x3e7f
 800029a:	629a      	str	r2, [r3, #40]	@ 0x28
	TIM4->ARR = ARR_VAL -1;
 800029c:	4b1b      	ldr	r3, [pc, #108]	@ (800030c <TimerInit+0xc8>)
 800029e:	f240 12f3 	movw	r2, #499	@ 0x1f3
 80002a2:	62da      	str	r2, [r3, #44]	@ 0x2c
	TIM4->CCR1 = CCR1_VAL -1;
 80002a4:	4b19      	ldr	r3, [pc, #100]	@ (800030c <TimerInit+0xc8>)
 80002a6:	2263      	movs	r2, #99	@ 0x63
 80002a8:	635a      	str	r2, [r3, #52]	@ 0x34
	TIM4->CCR2 = CCR2_VAL -1;
 80002aa:	4b18      	ldr	r3, [pc, #96]	@ (800030c <TimerInit+0xc8>)
 80002ac:	22c7      	movs	r2, #199	@ 0xc7
 80002ae:	639a      	str	r2, [r3, #56]	@ 0x38
	TIM4->CCR3 = CCR3_VAL -1;
 80002b0:	4b16      	ldr	r3, [pc, #88]	@ (800030c <TimerInit+0xc8>)
 80002b2:	f240 122b 	movw	r2, #299	@ 0x12b
 80002b6:	63da      	str	r2, [r3, #60]	@ 0x3c
	TIM4->CCR4 = CCR4_VAL -1;
 80002b8:	4b14      	ldr	r3, [pc, #80]	@ (800030c <TimerInit+0xc8>)
 80002ba:	f240 128f 	movw	r2, #399	@ 0x18f
 80002be:	641a      	str	r2, [r3, #64]	@ 0x40

	TIM4->CCMR1 |= TIM_CCMR1_OC1M_0 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC2M_0 | TIM_CCMR1_OC2M_1;
 80002c0:	4b12      	ldr	r3, [pc, #72]	@ (800030c <TimerInit+0xc8>)
 80002c2:	699b      	ldr	r3, [r3, #24]
 80002c4:	4a11      	ldr	r2, [pc, #68]	@ (800030c <TimerInit+0xc8>)
 80002c6:	f443 5340 	orr.w	r3, r3, #12288	@ 0x3000
 80002ca:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 80002ce:	6193      	str	r3, [r2, #24]
	TIM4->CCMR2 |= TIM_CCMR2_OC3M_0 | TIM_CCMR2_OC3M_1 | TIM_CCMR2_OC4M_0 | TIM_CCMR2_OC4M_1;
 80002d0:	4b0e      	ldr	r3, [pc, #56]	@ (800030c <TimerInit+0xc8>)
 80002d2:	69db      	ldr	r3, [r3, #28]
 80002d4:	4a0d      	ldr	r2, [pc, #52]	@ (800030c <TimerInit+0xc8>)
 80002d6:	f443 5340 	orr.w	r3, r3, #12288	@ 0x3000
 80002da:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 80002de:	61d3      	str	r3, [r2, #28]

	TIM4->CCER |= TIM_CCER_CC1E | TIM_CCER_CC2E | TIM_CCER_CC3E | TIM_CCER_CC4E;
 80002e0:	4b0a      	ldr	r3, [pc, #40]	@ (800030c <TimerInit+0xc8>)
 80002e2:	6a1b      	ldr	r3, [r3, #32]
 80002e4:	4a09      	ldr	r2, [pc, #36]	@ (800030c <TimerInit+0xc8>)
 80002e6:	f443 5388 	orr.w	r3, r3, #4352	@ 0x1100
 80002ea:	f043 0311 	orr.w	r3, r3, #17
 80002ee:	6213      	str	r3, [r2, #32]

	TIM4->CR1 |= TIM_CR1_CEN;
 80002f0:	4b06      	ldr	r3, [pc, #24]	@ (800030c <TimerInit+0xc8>)
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	4a05      	ldr	r2, [pc, #20]	@ (800030c <TimerInit+0xc8>)
 80002f6:	f043 0301 	orr.w	r3, r3, #1
 80002fa:	6013      	str	r3, [r2, #0]




}
 80002fc:	bf00      	nop
 80002fe:	46bd      	mov	sp, r7
 8000300:	bc80      	pop	{r7}
 8000302:	4770      	bx	lr
 8000304:	40023800 	.word	0x40023800
 8000308:	40020c00 	.word	0x40020c00
 800030c:	40000800 	.word	0x40000800

08000310 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000310:	480d      	ldr	r0, [pc, #52]	@ (8000348 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000312:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000314:	f7ff ff60 	bl	80001d8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000318:	480c      	ldr	r0, [pc, #48]	@ (800034c <LoopForever+0x6>)
  ldr r1, =_edata
 800031a:	490d      	ldr	r1, [pc, #52]	@ (8000350 <LoopForever+0xa>)
  ldr r2, =_sidata
 800031c:	4a0d      	ldr	r2, [pc, #52]	@ (8000354 <LoopForever+0xe>)
  movs r3, #0
 800031e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000320:	e002      	b.n	8000328 <LoopCopyDataInit>

08000322 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000322:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000324:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000326:	3304      	adds	r3, #4

08000328 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000328:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800032a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800032c:	d3f9      	bcc.n	8000322 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800032e:	4a0a      	ldr	r2, [pc, #40]	@ (8000358 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000330:	4c0a      	ldr	r4, [pc, #40]	@ (800035c <LoopForever+0x16>)
  movs r3, #0
 8000332:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000334:	e001      	b.n	800033a <LoopFillZerobss>

08000336 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000336:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000338:	3204      	adds	r2, #4

0800033a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800033a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800033c:	d3fb      	bcc.n	8000336 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 800033e:	f000 f811 	bl	8000364 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 8000342:	f7ff ff41 	bl	80001c8 <main>

08000346 <LoopForever>:

LoopForever:
  b LoopForever
 8000346:	e7fe      	b.n	8000346 <LoopForever>
  ldr   r0, =_estack
 8000348:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800034c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000350:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000354:	080003cc 	.word	0x080003cc
  ldr r2, =_sbss
 8000358:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800035c:	2000001c 	.word	0x2000001c

08000360 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000360:	e7fe      	b.n	8000360 <ADC_IRQHandler>
	...

08000364 <__libc_init_array>:
 8000364:	b570      	push	{r4, r5, r6, lr}
 8000366:	4d0d      	ldr	r5, [pc, #52]	@ (800039c <__libc_init_array+0x38>)
 8000368:	4c0d      	ldr	r4, [pc, #52]	@ (80003a0 <__libc_init_array+0x3c>)
 800036a:	1b64      	subs	r4, r4, r5
 800036c:	10a4      	asrs	r4, r4, #2
 800036e:	2600      	movs	r6, #0
 8000370:	42a6      	cmp	r6, r4
 8000372:	d109      	bne.n	8000388 <__libc_init_array+0x24>
 8000374:	4d0b      	ldr	r5, [pc, #44]	@ (80003a4 <__libc_init_array+0x40>)
 8000376:	4c0c      	ldr	r4, [pc, #48]	@ (80003a8 <__libc_init_array+0x44>)
 8000378:	f000 f818 	bl	80003ac <_init>
 800037c:	1b64      	subs	r4, r4, r5
 800037e:	10a4      	asrs	r4, r4, #2
 8000380:	2600      	movs	r6, #0
 8000382:	42a6      	cmp	r6, r4
 8000384:	d105      	bne.n	8000392 <__libc_init_array+0x2e>
 8000386:	bd70      	pop	{r4, r5, r6, pc}
 8000388:	f855 3b04 	ldr.w	r3, [r5], #4
 800038c:	4798      	blx	r3
 800038e:	3601      	adds	r6, #1
 8000390:	e7ee      	b.n	8000370 <__libc_init_array+0xc>
 8000392:	f855 3b04 	ldr.w	r3, [r5], #4
 8000396:	4798      	blx	r3
 8000398:	3601      	adds	r6, #1
 800039a:	e7f2      	b.n	8000382 <__libc_init_array+0x1e>
 800039c:	080003c4 	.word	0x080003c4
 80003a0:	080003c4 	.word	0x080003c4
 80003a4:	080003c4 	.word	0x080003c4
 80003a8:	080003c8 	.word	0x080003c8

080003ac <_init>:
 80003ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ae:	bf00      	nop
 80003b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003b2:	bc08      	pop	{r3}
 80003b4:	469e      	mov	lr, r3
 80003b6:	4770      	bx	lr

080003b8 <_fini>:
 80003b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ba:	bf00      	nop
 80003bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003be:	bc08      	pop	{r3}
 80003c0:	469e      	mov	lr, r3
 80003c2:	4770      	bx	lr
